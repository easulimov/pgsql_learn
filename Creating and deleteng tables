### Creating tables
CREATE TABLE publisher
(
  publisher_id integer PRIMARY KEY,
  org_name varchar(128) NOT NULL,
  address text NOT NULL
);

CREATE TABLE book
(
  book_id integer PRIMARY KEY,
  title text NOT NULL,
  isbn varchar(32) NOT NULL
);


### Deleting tables

DROP TABLE publisher;
DROP TABLE book;
DROP TABLE IF EXISTS book ;





####################################################
CREATE TABLE IF NOT EXISTS public.publisher
(
    publisher_id integer NOT NULL,
    org_name character varying(128) NOT NULL,
    address text NOT NULL,
    CONSTRAINT pk_publisher_id PRIMARY KEY (publisher_id)
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.publisher
    OWNER to bart;
####################################################

CREATE TABLE IF NOT EXISTS public.book
(
    book_id integer NOT NULL,
    title text NOT NULL,
    isbn character varying(32) NOT NULL,
    PRIMARY KEY (book_id)
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.book
    OWNER to bart;
####################################################


### Using foreign key

CREATE TABLE book (
	
    book_id integer PRIMARY KEY NOT NULL,
	title text NOT NULL,
	isbn character varying(32) NOT NULL,
	fk_publisher_id integer REFERENCES publisher(publisher_id) NOT NULL

);



### Relation many to many

CREATE TABLE book (
	
    book_id integer PRIMARY KEY,
    title text NOT NULL,
    isbn character varying(32) NOT NULL
   
 );
 
 CREATE TABLE author (
	
    author_id integer PRIMARY KEY,
    full_name text NOT NULL,
    rating real
   
 );

CREATE TABLE book_author (
	
    book_id integer REFERENCES book(book_id),
    author_id integer REFERENCES author(author_id),
    CONSTRAINT pk_book_author PRIMARY KEY (book_id, author_id)

);
